{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","Component","App","onSearchChange","event","setState","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"mPAuBeA,EApBE,SAAC,GAAe,EAAbC,OAEhB,MAAM,IAAIC,MAAM,YCSLC,EAXG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,yBAAKC,UAAU,OACb,2BAAOA,UAAU,mCACfC,KAAK,SACLC,YAAY,gBACZC,SAAWJ,MCOJK,EAdA,SAAAC,GACb,OACE,yBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,oBACRC,OAAQ,UAGTJ,EAAMK,WCUEC,E,YAlBb,WAAYN,GAAQ,IAAD,8BACjB,4CAAMA,KACDO,MAAQ,CACXC,UAAU,GAHK,E,+EAODC,EAAOC,GACvBC,KAAKJ,MAAM,CAAEC,UAAU,M,+BAGvB,OAAIG,KAAKJ,MAAMC,SACN,uDAEFG,KAAKX,MAAMK,a,GAfKO,aCmDZC,G,kBA7Cb,aAAe,IAAD,8BACZ,+CAiBFC,eAAiB,SAAAC,GACf,EAAKC,SAAS,CACZvB,YAAasB,EAAME,OAAOC,SAlB5B,EAAKX,MAAQ,CACXjB,OAAQ,GACRG,YAAa,IAJH,E,iFAQO,IAAD,OAClB0B,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OACT,EAAKP,SAAS,CACZ1B,OAAQiC,S,+BAWN,IAAD,EACyBZ,KAAKJ,MAA7BjB,EADD,EACCA,OAAQG,EADT,EACSA,YACV+B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACnC,OAAOA,EAAMC,KAAKC,cAAcC,SAASpC,EAAYmC,kBAEvD,OAAQtC,EAAOwC,OAGb,yBAAKnC,UAAU,MACb,wBAAIA,UAAU,MAAd,iBACA,kBAAC,EAAD,CAAWD,aAAciB,KAAKG,iBAC9B,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUxB,OAAQkC,OAPxB,wBAAI7B,UAAU,SAAd,oB,GA/BYiB,c,MCElBmB,IAASC,OAAQ,kBAAE,EAAF,MAAYC,SAASC,eAAe,U","file":"static/js/main.36e0a35e.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  if (true) {\n    throw new Error(\"Nooooo!\");\n  }\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card\n            key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\n\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='Search Robots'\n        onChange={ searchChange } />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from \"react\";\n\nconst Scroll = props => {\n  return (\n    <div\n      style={{\n        overflowY: \"scroll\",\n        border: \"2px solid #0ccac4\",\n        height: \"900px\"\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.state({ hasError: true });\n  }\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oooops I did it again!!</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users =>\n        this.setState({\n          robots: users\n        })\n      );\n  }\n\n  onSearchChange = event => {\n    this.setState({\n      searchfield: event.target.value\n    });\n  };\n\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    return !robots.length ? (\n      <h1 className=\"f1 tc\"> Loading... </h1>\n    ) : (\n      <div className=\"tc\">\n        <h1 className=\"f1\"> Robofriends </h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Card from './Card';\nimport App from './containers/App';\nimport 'tachyons';\n\n// import serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'))\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker();"],"sourceRoot":""}