{"ast":null,"code":"var _jsxFileName = \"/Users/timdorsett/Desktop/test-center/robo-friends/src/components/ErrorBoundry.js\";\nimport React, { Component } from \"react\";\nimport { render } from \"@testing-library/react\";\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.state({\n      hasError: true\n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Oooops I did it again!!\");\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundry;","map":{"version":3,"sources":["/Users/timdorsett/Desktop/test-center/robo-friends/src/components/ErrorBoundry.js"],"names":["React","Component","render","ErrorBoundry","constructor","props","state","hasError","componentDidCatch","error","info","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACnCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,CAACC,KAAD,EAAQC,IAAR,EAAc;AAC7B,SAAKJ,KAAL,CAAW;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAX;AACD;;AACDL,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKI,KAAL,CAAWC,QAAf,EAAyB;AACvB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAP;AACD;;AACD,WAAO,KAAKF,KAAL,CAAWM,QAAlB;AACD;;AAhBkC;;AAmBrC,eAAeR,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"@testing-library/react\";\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.state({ hasError: true });\n  }\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oooops I did it again!!</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n"]},"metadata":{},"sourceType":"module"}