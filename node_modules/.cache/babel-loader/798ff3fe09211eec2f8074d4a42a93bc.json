{"ast":null,"code":"import _classCallCheck from\"/Users/timdorsett/Desktop/robofriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/timdorsett/Desktop/robofriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/timdorsett/Desktop/robofriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/timdorsett/Desktop/robofriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/timdorsett/Desktop/robofriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{connect}from'react-redux';import CardList from\"../components/CardList\";import SearchBox from\"../components/SearchBox\";import Scroll from\"../components/Scroll\";import ErrorBoundry from\"../components/ErrorBoundry\";import\"./App.css\";import{setSearchField,requestRobots}from'../actions';var mapStateToProps=function mapStateToProps(state){return{searchField:state.searchRobots.searchField,robots:state.requestRobots.robots,isPending:state.requestRobots.isPending,error:state.requestRobots.error};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onSearchChange:function onSearchChange(event){return dispatch(setSearchField(event.target.value));},onRequestRobots:function onRequestRobots(){return dispatch(requestRobots());}};};var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){_classCallCheck(this,App);return _possibleConstructorReturn(this,_getPrototypeOf(App).apply(this,arguments));}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.onRequestRobots();}},{key:\"render\",value:function render(){var _this$props=this.props,searchField=_this$props.searchField,onSearchChange=_this$props.onSearchChange,robots=_this$props.robots,isPending=_this$props.isPending;var filteredRobots=robots.filter(function(robot){return robot.name.toLowerCase().includes(searchField.toLowerCase());});return isPending?/*#__PURE__*/React.createElement(\"h1\",{className:\"f1 tc\"},\" Loading... \"):/*#__PURE__*/React.createElement(\"div\",{className:\"tc\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"f1\"},\" Robofriends \"),/*#__PURE__*/React.createElement(SearchBox,{searchChange:onSearchChange}),/*#__PURE__*/React.createElement(Scroll,null,/*#__PURE__*/React.createElement(ErrorBoundry,null,/*#__PURE__*/React.createElement(CardList,{robots:filteredRobots}))));}}]);return App;}(Component);export default connect(mapStateToProps,mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/timdorsett/Desktop/robofriends/src/containers/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","ErrorBoundry","setSearchField","requestRobots","mapStateToProps","state","searchField","searchRobots","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","props","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":"0xBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAO,WAAP,CAEA,OAASC,cAAT,CAAyBC,aAAzB,KAA8C,YAA9C,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC/B,MAAO,CACLC,WAAW,CAAED,KAAK,CAACE,YAAN,CAAmBD,WAD3B,CAELE,MAAM,CAAEH,KAAK,CAACF,aAAN,CAAoBK,MAFvB,CAGLC,SAAS,CAAEJ,KAAK,CAACF,aAAN,CAAoBM,SAH1B,CAILC,KAAK,CAAEL,KAAK,CAACF,aAAN,CAAoBO,KAJtB,CAAP,CAMD,CAPD,CASA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACvC,MAAO,CACLC,cAAc,CAAE,wBAACC,KAAD,QAAWF,CAAAA,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAAnB,EADX,CAELC,eAAe,CAAE,iCAAML,CAAAA,QAAQ,CAACT,aAAa,EAAd,CAAd,EAFZ,CAAP,CAID,CALD,C,GAOMe,CAAAA,G,uQAEgB,CAClB,KAAKC,KAAL,CAAWF,eAAX,GACD,C,uCAEQ,iBACoD,KAAKE,KADzD,CACCb,WADD,aACCA,WADD,CACcO,cADd,aACcA,cADd,CAC8BL,MAD9B,aAC8BA,MAD9B,CACsCC,SADtC,aACsCA,SADtC,CAEP,GAAMW,CAAAA,cAAc,CAAGZ,MAAM,CAACa,MAAP,CAAc,SAAAC,KAAK,CAAI,CAC5C,MAAOA,CAAAA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCnB,WAAW,CAACkB,WAAZ,EAAlC,CAAP,CACD,CAFsB,CAAvB,CAGA,MAAOf,CAAAA,SAAS,cACd,0BAAI,SAAS,CAAC,OAAd,iBADc,cAGZ,2BAAK,SAAS,CAAC,IAAf,eACE,0BAAI,SAAS,CAAC,IAAd,kBADF,cAEE,oBAAC,SAAD,EAAW,YAAY,CAAGI,cAA1B,EAFF,cAGE,oBAAC,MAAD,mBACE,oBAAC,YAAD,mBACE,oBAAC,QAAD,EAAU,MAAM,CAAGO,cAAnB,EADF,CADF,CAHF,CAHJ,CAaD,C,iBAxBexB,S,EA2BlB,cAAeC,CAAAA,OAAO,CAACO,eAAD,CAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport \"./App.css\";\n\nimport { setSearchField, requestRobots } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  }\n}\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const { searchField, onSearchChange, robots, isPending } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return isPending ?\n      <h1 className=\"f1 tc\"> Loading... </h1> :\n      (\n        <div className=\"tc\">\n          <h1 className=\"f1\"> Robofriends </h1>\n          <SearchBox searchChange={ onSearchChange } />\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={ filteredRobots } />\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n      );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}